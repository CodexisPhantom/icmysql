# Cache System
### Description
The cache system if a efficient mode to make only necessary queries to databases, that save the new data in a cache and if the data is already in the cache it will not make a new query to the database. This feature is very useful to make a lot of queries to the database without having to worry about the performance of the server.
Using this feature you will save more than the 50% of the time that you use to make queries to the database. If you have made any change to the database for example making a Update query the cache data will be removed and the next time that you make a query to the database it will be saved in the cache again.
### Video
<div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/e/qgpa21" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div>
### Use
To use this feature you have to specify the databases credentials in the server.cfg, for example:
```cfg
set mysqlCredentials_1 "host=127.0.0.1;user=root; password=1234; database=fxserver; port=3306"
set mysqlCredentials_2 "host=127.0.0.1;user=root; password=1234; database=fxserver; port=3306"
```
Once you have specified the databases when the server start in the console you will see a message that tell you if the script has connected to each DB correctly.
To use you have to specify the database number in the function that you want to use as the first parameter, for example to make a select in the database 2:
```lua
MySQL.Select(2, "SELECT name FROM players WHERE id = ?". {3}, function(result)
    print(result) -- Output: Daniel
end)
```
### Files
This is the list of the involved files in this feature to help any developer to understand how it works:
- ```src/db/Connections.js```
- ```src/db/Query.lua```
- ```src/db/Reader.js```
